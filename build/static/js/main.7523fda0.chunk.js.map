{"version":3,"sources":["SortingVisualizer/colorCodes.js","Icons/GithubIcon.js","algorithms/mergesort.js","algorithms/swap.js","utils/sound.js","algorithms/quicksort.js","algorithms/heapsort.js","SortingVisualizer/Visualizer.js","algorithms/bubblesort.js","algorithms/insertion.js","algorithms/selectionsort.js","App.js","index.js"],"names":["colors","primaryColor","afterSortingColor","pivotActiveColor","sortedElementColor","cyan","orange","GithubIcon","count","mergesort","arr","low","high","animationSpeed","aux","push","mid","Math","floor","right","left","k","arrayBars","document","getElementsByClassName","li","ri","counter","barIdx","i","setTimeout","style","backgroundColor","height","length","swap","j","temp","sound_test","tone","track","value1","value2","size","audio","delay","frequency","linearRampToValueAtTime","currentTime","gain","cancelScheduledValues","quicksortHelper","speed","pivot","partition","pivotElement","tempI","setColor","color","swapHeights","heapify","n","largest","leftChild","rightChild","sort","algoOption","Visualizer","useState","mainArray","setMainArray","arrayLength","algo","setAlgo","able","setAble","options","setOptions","AudioContext","master","createGain","setValueAtTime","connect","destination","createOscillator","type","value","start","useEffect","populateArray","items","pointerEvents","disabled","tempArr","tmp","a","b","random","item","idx","val","colorEveryElement","sortedArray","bubbleSortAnimate","console","log","map","swapped","x","bubbleSort","mergeSort","mergeSortAnimation","insertionSortAnimate","sound_swap","insertionSort","selectionSortAnimate","minIdx","oldMinIdx","selectionSort","quicksortAnimate","quicksort","heapsortAnimate","heapsort","Box","fill","className","direction","border","Grid","rows","columns","gap","areas","align","Text","Select","placeholder","onChange","option","onClose","onSearch","text","escapedText","replace","exp","RegExp","filter","o","test","pad","Button","primary","icon","CirclePlay","label","onClick","startSorting","Refresh","RangeInput","min","max","step","gridArea","width","key","App","Grommet","full","theme","grommet","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7523fda0.chunk.js","sourcesContent":["const colors = {\r\n\tprimaryColor: '#00b0ff',\r\n\tafterSortingColor: '#00587a',\r\n\tpivotActiveColor: '#ff2400',\r\n\tsortedElementColor: '#4cbb17',\r\n\tcyan: '#40E0D0',\r\n\torange: '#FFA500',\r\n};\r\n\r\nexport default colors;\r\n","import React from 'react';\r\nimport '../SortingVisualizer/SortingVisualizer.css';\r\nfunction GithubIcon({ className }) {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tonClick={() => {\r\n\t\t\t\tconsole.log('heloo');\r\n\t\t\t\twindow\r\n\t\t\t\t\t.open(\r\n\t\t\t\t\t\t'https://github.com/ashirbad29/Sorting-Algorithm-Visualizer',\r\n\t\t\t\t\t\t'_blank'\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.focus();\r\n\t\t\t}}\r\n\t\t\tclassName={className}\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: '#00303f',\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t}}\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\twidth='40'\r\n\t\t\theight='40'\r\n\t\t\tviewBox='0 0 24 24'\r\n\t\t>\r\n\t\t\t<path d='M10.9 2.1c-4.6.5-8.3 4.2-8.8 8.7-.5 4.7 2.2 8.9 6.3 10.5.3.1.6-.1.6-.5v-1.6s-.4.1-.9.1c-1.4 0-2-1.2-2.1-1.9-.1-.4-.3-.7-.6-1-.3-.1-.4-.1-.4-.2 0-.2.3-.2.4-.2.6 0 1.1.7 1.3 1 .5.8 1.1 1 1.4 1 .4 0 .7-.1.9-.2.1-.7.4-1.4 1-1.8-2.3-.5-4-1.8-4-4 0-1.1.5-2.2 1.2-3-.1-.2-.2-.7-.2-1.4 0-.4 0-1 .3-1.6 0 0 1.4 0 2.8 1.3.5-.2 1.2-.3 1.9-.3s1.4.1 2 .3C15.3 6 16.8 6 16.8 6c.2.6.2 1.2.2 1.6 0 .8-.1 1.2-.2 1.4.7.8 1.2 1.8 1.2 3 0 2.2-1.7 3.5-4 4 .6.5 1 1.4 1 2.3v2.6c0 .3.3.6.7.5 3.7-1.5 6.3-5.1 6.3-9.3 0-6-5.1-10.7-11.1-10z'></path>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default GithubIcon;\r\n","import colors from '../SortingVisualizer/colorCodes';\r\n\r\nlet count = 0;\r\n\r\nexport const mergeSortAnimation = (tempArr, animationSpeed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tcount = 0;\r\n\tconst sortedArray = mergesort(arr, 0, arr.length - 1, animationSpeed);\r\n\treturn { sortedArray, count };\r\n};\r\n\r\nconst mergesort = (arr, low, high, animationSpeed) => {\r\n\tif (low > high) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tif (low === high) {\r\n\t\tlet aux = [];\r\n\t\taux.push(arr[low]);\r\n\t\treturn aux;\r\n\t}\r\n\r\n\tlet mid = Math.floor((high + low) / 2);\r\n\r\n\t// recursively divide the array until its sorted\r\n\t// in the end it will only have a single item and sorted :)\r\n\r\n\tconst right = mergesort(arr, low, mid, animationSpeed);\r\n\tconst left = mergesort(arr, mid + 1, high, animationSpeed);\r\n\r\n\tconst aux = [];\r\n\tlet k = low;\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\n\tlet li = 0,\r\n\t\tri = 0; // for left and right array respectively\r\n\twhile (li < left.length && ri < right.length) {\r\n\t\tlet counter = count;\r\n\t\tlet barIdx = k;\r\n\r\n\t\tif (left[li] < right[ri]) {\r\n\t\t\taux.push(left[li]);\r\n\t\t\tlet i = li;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${left[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tli++;\r\n\t\t} else {\r\n\t\t\taux.push(right[ri]);\r\n\t\t\tlet i = ri;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${right[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tri++;\r\n\t\t}\r\n\t\tk++;\r\n\t\tcount++;\r\n\t}\r\n\r\n\t// left exhausted\r\n\tif (li === left.length) {\r\n\t\twhile (ri < right.length) {\r\n\t\t\taux.push(right[ri]);\r\n\t\t\tlet barIdx = k;\r\n\t\t\tlet i = ri;\r\n\t\t\tlet counter = count;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${right[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tri++;\r\n\t\t\tcount++;\r\n\t\t\tk++;\r\n\t\t}\r\n\t} else if (ri === right.length) {\r\n\t\twhile (li < left.length) {\r\n\t\t\taux.push(left[li]);\r\n\t\t\tlet barIdx = k;\r\n\t\t\tlet i = li;\r\n\t\t\tlet counter = count;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${left[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tli++;\r\n\t\t\tk++;\r\n\t\t\tcount++;\r\n\t\t}\r\n\t}\r\n\treturn aux;\r\n};\r\n","export function swap(i, j, arr = []) {\r\n\tlet temp = arr[i];\r\n\tarr[i] = arr[j];\r\n\tarr[j] = temp;\r\n}\r\n","\r\nexport const sound_test = (tone, track,value1,value2,size,audio,delay) => {\r\n\tvar factor = ((value1 / size) + (value2 / size) / 2);\r\n    var frequency = 440 + (factor * 440);\r\n\r\n    tone.frequency.linearRampToValueAtTime(frequency, audio.currentTime);\r\n\r\n    track.gain.cancelScheduledValues(audio.currentTime);\r\n    track.gain.linearRampToValueAtTime(0.75, audio.currentTime);\r\n    track.gain.linearRampToValueAtTime(0, audio.currentTime + delay/1000);\r\n};\r\n\r\n\r\nexport const sound_swap = (tone, track,value1,value2,size,audio,delay) => {\r\n    var factor = ((value1 / size) + (value2 / size) / 2);\r\n    var frequency = 440 - (factor * 440);\r\n\r\n    tone.frequency.linearRampToValueAtTime(frequency, audio.currentTime);\r\n\r\n    track.gain.cancelScheduledValues(audio.currentTime);\r\n    track.gain.linearRampToValueAtTime(1, audio.currentTime);\r\n    track.gain.linearRampToValueAtTime(0, audio.currentTime + delay/1000);\r\n};\r\n","import colors from '../SortingVisualizer/colorCodes';\r\nimport { swap } from './swap';\r\n\r\nconst arrayBars = document.getElementsByClassName('arrayBar');\r\nlet count = 0;\r\n\r\nexport const quicksort = (tempArr, animationSpeed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tcount = 0;\r\n\tlet low = 0;\r\n\tlet high = arr.length - 1;\r\n\r\n\t// main quicksort function\r\n\tquicksortHelper(arr, low, high, animationSpeed);\r\n\tcount += 2;\r\n\treturn { arr, count };\r\n};\r\n\r\nconst quicksortHelper = (arr, low, high, speed) => {\r\n\tif (low > high) return;\r\n\r\n\tlet pivot = partition(arr, low, high, speed);\r\n\r\n\t// Colors the element which is in its correct place\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[pivot].style.backgroundColor = colors.sortedElementColor;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tquicksortHelper(arr, low, pivot - 1, speed);\r\n\tquicksortHelper(arr, pivot + 1, high, speed);\r\n};\r\n\r\nconst partition = (arr, low, high, speed) => {\r\n\tlet pivotElement = arr[high];\r\n\r\n\t// Colors the current pivot index\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[high].style.backgroundColor = colors.pivotActiveColor;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tlet i = low;\r\n\tfor (let j = low; j < high; j++) {\r\n\t\t// animate the curr traversing element\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[j].style.backgroundColor = colors.cyan;\r\n\t\t}, count * speed);\r\n\t\tcount += 2;\r\n\r\n\t\t// color primary to the curr traversing element\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[j].style.backgroundColor = colors.primaryColor;\r\n\t\t}, count * speed);\r\n\t\tcount++;\r\n\r\n\t\tif (pivotElement > arr[j]) {\r\n\t\t\tlet tempI = i;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[tempI].style.backgroundColor = colors.orange;\r\n\r\n\t\t\t\tlet temp = arrayBars[tempI].style.height;\r\n\t\t\t\tarrayBars[tempI].style.height = arrayBars[j].style.height;\r\n\t\t\t\tarrayBars[j].style.height = temp;\r\n\t\t\t}, count * speed);\r\n\t\t\tcount++;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[tempI].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (count + 1) * speed);\r\n\t\t\tcount++;\r\n\r\n\t\t\tswap(i, j, arr);\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\t// resets the color of pivot element to primary\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[high].style.backgroundColor = colors.primaryColor;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tsetTimeout(() => {\r\n\t\tlet temp = arrayBars[i].style.height;\r\n\t\tarrayBars[i].style.height = arrayBars[high].style.height;\r\n\t\tarrayBars[high].style.height = temp;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tswap(i, high, arr);\r\n\treturn i;\r\n};\r\n","import { swap } from './swap';\r\nimport colors from '../SortingVisualizer/colorCodes';\r\n\r\nlet count = 0;\r\n\r\nconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\nexport const heapsort = (tempArr, speed) => {\r\n\tcount = 0;\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tsort(arr, arr.length, speed);\r\n\treturn { arr, count };\r\n};\r\n\r\nconst setColor = (speed, color, i, j) => {\r\n\tif (i) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[i].style.backgroundColor = color;\r\n\t\t}, count * speed);\r\n\t}\r\n\r\n\tif (j) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[j].style.backgroundColor = color;\r\n\t\t}, count * speed);\r\n\t}\r\n\tcount++;\r\n};\r\nconst swapHeights = (speed, color, i, j) => {\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[i].style.backgroundColor = color;\r\n\t\tarrayBars[j].style.backgroundColor = color;\r\n\r\n\t\tlet temp = arrayBars[i].style.height;\r\n\t\tarrayBars[i].style.height = arrayBars[j].style.height;\r\n\t\tarrayBars[j].style.height = temp;\r\n\t}, count * speed);\r\n\r\n\tcount++;\r\n};\r\n// heapify\r\nconst heapify = (arr, i, n, speed) => {\r\n\tlet largest = i;\r\n\tlet leftChild = i * 2 + 1;\r\n\tlet rightChild = i * 2 + 2;\r\n\r\n\tif (leftChild < n && arr[leftChild] > arr[largest]) largest = leftChild;\r\n\r\n\tif (rightChild < n && arr[rightChild] > arr[largest]) largest = rightChild;\r\n\r\n\tif (largest !== i) {\r\n\t\tswap(i, largest, arr);\r\n\r\n\t\t// color\r\n\t\tswapHeights(speed, colors.pivotActiveColor, i, largest);\r\n\t\tsetColor(speed, colors.primaryColor, i, largest);\r\n\t\theapify(arr, largest, n, speed);\r\n\t}\r\n};\r\n\r\n// sort\r\nconst sort = (arr, n, speed) => {\r\n\t// arrange the array\r\n\tfor (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\r\n\t\theapify(arr, i, n, speed);\r\n\t}\r\n\r\n\tcount += 3;\r\n\t// one by one extract the element from heap\r\n\t// and put them at back\r\n\tfor (let i = n - 1; i >= 0; i--) {\r\n\t\tswap(i, 0, arr);\r\n\t\tswapHeights(speed, colors.orange, i, 0);\r\n\t\tcount += 2;\r\n\r\n\t\tsetColor(speed, colors.sortedElementColor, i);\r\n\t\theapify(arr, 0, i, speed);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport colors from './colorCodes';\r\nimport GithubIcon from '../Icons/GithubIcon';\r\nimport { mergeSortAnimation } from '../algorithms/mergesort';\r\nimport { insertionSort } from '../algorithms/insertion';\r\nimport { selectionSort } from '../algorithms/selectionsort';\r\nimport { bubbleSort } from '../algorithms/bubblesort';\r\nimport { quicksort } from '../algorithms/quicksort';\r\nimport { heapsort } from '../algorithms/heapsort';\r\n// stylesheet\r\nimport './SortingVisualizer.css';\r\nimport { RangeInput, Box, Button, Grid, Text,Select } from 'grommet';\r\nimport {Refresh,CirclePlay} from 'grommet-icons';\r\n// Random Number Genrator\r\nconst generateRandomNumber = (i, j) => {\r\n\treturn Math.floor(i + Math.random() * (j - i));\r\n};\r\nconst algoOption = [\"bubble sort\",\"merge sort\",\"insertion sort\",\"selection sort\",\"quick sort\",\"heap sort\"];\r\n\r\nconst Visualizer = () => {\r\n\t// state of the array\r\n\tconst [mainArray, setMainArray] = useState([]);\r\n\tconst [arrayLength, setArrayLength] = useState(100);\r\n\tconst [animationSpeed, setAnimationSpeed] = useState(10);\r\n\tconst [algo, setAlgo] = useState('mergesort');\r\n\tconst [able, setAble] = useState(true);\r\n\tconst [options, setOptions] = useState(algoOption);\r\n\tconst audio = new AudioContext();\r\n\tvar master = audio.createGain();\r\n\tmaster.gain.setValueAtTime(0.20, audio.currentTime);\r\n\tmaster.connect(audio.destination);\r\n\tvar track = audio.createGain();\r\n\ttrack.gain.setValueAtTime(0, audio.currentTime);\r\n\ttrack.connect(master);\r\n\r\n\tvar tone = audio.createOscillator();\r\n\r\n\ttone.type = 'triangle';\r\n\ttone.frequency.value = 440;\r\n\ttone.connect(track);\r\n\ttone.start();\r\n\r\n\t//Render the Array Before DOM loades\r\n\tuseEffect(() => {\r\n\t\tif (able) populateArray(arrayLength);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [arrayLength, algo]);\r\n\r\n\t// ABLE / DISABLE BUTTONS ETC.\r\n\tuseEffect(() => {\r\n\t\tconst items = document.getElementsByClassName('able');\r\n\r\n\t\tif (!able) {\r\n\t\t\tfor (let i = 0; i < items.length; i++) {\r\n\t\t\t\titems[i].style.pointerEvents = 'none';\r\n\t\t\t\titems[i].disabled = true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < items.length; i++) {\r\n\t\t\t\titems[i].style.pointerEvents = 'auto';\r\n\t\t\t\titems[i].disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}, [able]);\r\n\r\n\tconst populateArray = size => {\r\n\t\tconst tempArr = [];\r\n\t\tvar tmp=[];\r\n\t\tfor(let i=1;i<size+1;i++){\r\n\t\t\ttmp[i-1]=i;\r\n\t\t}\r\n\t\ttmp.sort(function(a, b) {\r\n\t\t\treturn Math.random() > 0.5 ? -1 : 1;\r\n\t\t  });\r\n\t\tfor (let i = 0; i < tmp.length; i++) {\r\n\t\t\tconst item = {\r\n\t\t\t\tidx: i,\r\n\t\t\t\tval: tmp[i],\r\n\t\t\t};\r\n\t\t\ttempArr.push(item);\r\n\t\t\tif (document.getElementsByClassName('arrayBar')[i] != null) {\r\n\t\t\t\tdocument.getElementsByClassName('arrayBar')[i].style.backgroundColor =\r\n\t\t\t\t\tcolors.primaryColor;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (able) setMainArray(tempArr);\r\n\t};\r\n\r\n\t// colors every elements afte sorting\r\n\tconst colorEveryElement = (arr, counter) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst sortedArray = [];\r\n\t\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\t\tdocument.getElementsByClassName('arrayBar')[i].style.backgroundColor =\r\n\t\t\t\t\tcolors.afterSortingColor;\r\n\r\n\t\t\t\tsortedArray.push({\r\n\t\t\t\t\tidx: i,\r\n\t\t\t\t\tval: arr[i],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tsetMainArray(sortedArray);\r\n\t\t\tsetAble(true);\r\n\t\t}, counter * animationSpeed);\r\n\t};\r\n\r\n\t// BUBBLE SORT\r\n\tconst bubbleSortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconsole.log(mainArray);\r\n\t\tconst { arr, count } = bubbleSort(mainArray, animationSpeed,tone,track,audio);\r\n\t\tcolorEveryElement(arr, count + 1);\r\n\t};\r\n\r\n\t// MERGE SORT\r\n\tconst mergeSort = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { sortedArray, count } = mergeSortAnimation(\r\n\t\t\tmainArray,\r\n\t\t\tanimationSpeed\r\n\t\t);\r\n\t\tcolorEveryElement(sortedArray, count + 5);\r\n\t};\r\n\r\n\t// INSERTION SORT\r\n\tconst insertionSortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { arr, count } = insertionSort(mainArray, animationSpeed,tone,track,audio);\r\n\t\tcolorEveryElement(arr, count + 1);\r\n\t};\r\n\r\n\t// SELECTION SORT\r\n\tconst selectionSortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { arr, count } = selectionSort(mainArray, animationSpeed);\r\n\t\tcolorEveryElement(arr, count + 2);\r\n\t};\r\n\r\n\t//QUICK SORT\r\n\tconst quicksortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { arr, count } = quicksort(mainArray, animationSpeed);\r\n\t\tcolorEveryElement(arr, count + 1);\r\n\t};\r\n\r\n\t// HEAP SORT\r\n\tconst heapsortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { arr, count } = heapsort(mainArray, animationSpeed);\r\n\t\tcolorEveryElement(arr, count + 1);\r\n\t};\r\n\tconst startSorting = algo => {\r\n\t\tswitch (algo) {\r\n\t\t\tcase 'bubble sort':\r\n\t\t\t\tbubbleSortAnimate();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'merge sort':\r\n\t\t\t\tmergeSort();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'selection sort':\r\n\t\t\t\tselectionSortAnimate();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'insertion sort':\r\n\t\t\t\tinsertionSortAnimate();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quick sort':\r\n\t\t\t\tquicksortAnimate();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'heap sort':\r\n\t\t\t\theapsortAnimate();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tmergeSort();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tfill=\"vertical\"\r\n\t\t\tclassName=\"myContainer\"\r\n\t\t\tdirection=\"row\"\r\n\t\t\tborder={{ color: '#00b0ff', size: 'large' }}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\tclassName=\"myContainer\"\r\n\t\t\t\trows={['flex']}\r\n\t\t\t\tcolumns={['1/5', '4/5']}\r\n\t\t\t\tgap=\"small\"\r\n\t\t\t\tareas={[\r\n\t\t\t\t\t['sidebar', 'main'],\r\n\t\t\t\t]}\r\n\r\n\t\t\t>\r\n\t\t\t\t<Box direction=\"column\" align=\"center\" gap=\"medium\" fill=\"vertical\">\r\n\t\t\t\t<Box align=\"center\">\r\n\t\t\t\t\t<Text>Sorting Algorithm</Text>\r\n\t\t\t\t\t<Text>Visualizer</Text>\r\n    \t\t\t</Box>\r\n\t\t\t\t<Box >\r\n\t\t\t\t<Select\r\n\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\tplaceholder=\"Select Sorting Algorithm\"\r\n\t\t\t\t\tvalue={algo}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tonChange={({ option }) => setAlgo(option)}\r\n\t\t\t\t\tonClose={() => setOptions(algoOption)}\r\n\t\t\t\t\tonSearch={text => {\r\n\t\t\t\t\t\t// The line below escapes regular expression special characters:\r\n\t\t\t\t\t\t// [ \\ ^ $ . | ? * + ( )\r\n\t\t\t\t\t\tconst escapedText = text.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n\r\n\t\t\t\t\t\t// Create the regular expression with modified value which\r\n\t\t\t\t\t\t// handles escaping special characters. Without escaping special\r\n\t\t\t\t\t\t// characters, errors will appear in the console\r\n\t\t\t\t\t\tconst exp = new RegExp(escapedText, 'i');\r\n\t\t\t\t\t\tsetOptions(algoOption.filter(o => exp.test(o)));\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <Select\r\n\t\t\t\t\t\toptions={algoList}\r\n\t\t\t\t\t\tvalue={algo}\r\n\t\t\t\t\t\tonChange={({ option }) => setAlgo(option)}\r\n\t\t\t\t\t\t/> */}\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box pad=\"medium\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"light-2\"\r\n\t\t\t\t\tprimary\r\n\t\t\t\t\ticon={<CirclePlay/>}\r\n\t\t\t\t\tlabel=\"Play\"\r\n\t\t\t\t\tonClick={() => startSorting(algo)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"light-2\"\r\n\t\t\t\t\tprimary\r\n\t\t\t\t\ticon={<Refresh />}\r\n\t\t\t\t\tlabel=\"Reset\"\r\n\t\t\t\t\tonClick={() => {}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<RangeInput\r\n\t\t\t\t\tmin={16}\r\n\t\t\t\t\tmax={36}\r\n\t\t\t\t\tstep={2}\r\n\t\t\t\t\tvalue={1}\r\n\t\t\t\t\tonChange={() => {}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box  gridArea=\"main\" fill=\"vertical\" style={{width:'100%', height:'100%'}}>\r\n\t\t\t\t<div className='visualizeContainer'>\r\n\t\t\t\t{mainArray.map(item => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='arrayBar'\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: `${item.val}%`,\r\n\t\t\t\t\t\t\t\tbackgroundColor: colors.primaryColor,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tkey={item.idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{arrayLength < 29 && able && <span>{item.val}</span>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\r\n\t\t// <div className='container'>\r\n\t\t\t// <div className='visualizeContainer'>\r\n\t\t\t// \t{mainArray.map(item => {\r\n\t\t\t// \t\treturn (\r\n\t\t\t// \t\t\t<div\r\n\t\t\t// \t\t\t\tclassName='arrayBar'\r\n\t\t\t// \t\t\t\tstyle={{\r\n\t\t\t// \t\t\t\t\theight: `${item.val}px`,\r\n\t\t\t// \t\t\t\t\tbackgroundColor: colors.primaryColor,\r\n\t\t\t// \t\t\t\t}}\r\n\t\t\t// \t\t\t\tkey={item.idx}\r\n\t\t\t// \t\t\t>\r\n\t\t\t// \t\t\t\t{arrayLength < 29 && able && <span>{item.val}</span>}\r\n\t\t\t// \t\t\t</div>\r\n\t\t\t// \t\t);\r\n\t\t\t// \t})}\r\n\t\t\t// </div>\r\n\t\t// \t<div className='sidebar'>\r\n\t\t// \t\t<header>\r\n\t\t// \t\t\tSorting Algorithm <br /> Visualizer\r\n\t\t// \t\t</header>\r\n\t\t// \t\t<div className='select-box able'>\r\n\t\t// \t\t\t<label htmlFor='algo'>select algorithm</label>\r\n\t\t// \t\t\t<select\r\n\t\t// \t\t\t\tname='algo'\r\n\t\t// \t\t\t\tid='select'\r\n\t\t// \t\t\t\tvalue={algo}\r\n\t\t// \t\t\t\tonChange={e => setAlgo(e.target.value)}\r\n\t\t// \t\t\t>\r\n\t\t// \t\t\t\t<option value='bubblesort'>bubble sort</option>\r\n\t\t// \t\t\t\t<option value='mergesort'>merge sort</option>\r\n\t\t// \t\t\t\t<option value='insertionsort'>insertion sort</option>\r\n\t\t// \t\t\t\t<option value='selectionsort'>selection sort</option>\r\n\t\t// \t\t\t\t<option value='quicksort'>quick sort</option>\r\n\t\t// \t\t\t\t<option value='heapsort'>heap sort</option>\r\n\t\t// \t\t\t</select>\r\n\t\t// \t\t</div>\r\n\t\t// \t\t<button className='button able' onClick={() => startSorting(algo)}>\r\n\t\t// \t\t\tSort\r\n\t\t// \t\t</button>\r\n\r\n\t\t// \t\t<button\r\n\t\t// \t\t\tonClick={() => populateArray(arrayLength)}\r\n\t\t// \t\t\tclassName='new-arr-btn button able'\r\n\t\t// \t\t>\r\n\t\t// \t\t\tReset\r\n\t\t// \t\t</button>\r\n\r\n\t\t// \t\t<div className='slider-container'>\r\n\t\t// \t\t\t<label>Length of Array</label>\r\n\t\t// \t\t\t<input\r\n\t\t// \t\t\t\tclassName='input-range able'\r\n\t\t// \t\t\t\ttype='range'\r\n\t\t// \t\t\t\tvalue={arrayLength}\r\n\t\t// \t\t\t\tonChange={e => setArrayLength(e.target.value)}\r\n\t\t// \t\t\t\tmin='7'\r\n\t\t// \t\t\t\tmax='150'\r\n\t\t// \t\t\t/>\r\n\t\t// \t\t</div>\r\n\t\t// \t\t<div className='slider-container'>\r\n\t\t// \t\t\t<label>Speed</label>\r\n\t\t// \t\t\t<input\r\n\t\t// \t\t\t\tclassName='input-range able'\r\n\t\t// \t\t\t\ttype='range'\r\n\t\t// \t\t\t\tvalue={500 - animationSpeed}\r\n\t\t// \t\t\t\tonChange={e => setAnimationSpeed(500 - e.target.value)}\r\n\t\t// \t\t\t\tmin='350'\r\n\t\t// \t\t\t\tmax='499'\r\n\t\t// \t\t\t/>\r\n\t\t// \t\t</div>\r\n\r\n\t\t// \t\t<GithubIcon className={'github-icon'} />\r\n\t\t// \t</div>\r\n\t\t// </div>\r\n\t);\r\n};\r\n\r\nexport default Visualizer;\r\n","import colors from '../SortingVisualizer/colorCodes';\r\nimport {sound_test, sound_swap} from '../utils/sound';\r\nexport const bubbleSort = (tempArr, speed,tone,track,audio) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tlet count = 0;\r\n\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\tfor (let i = 0; i < arr.length - 1; i++) {\r\n\t\tlet swapped = false;\r\n\t\tfor (let j = 0; j < arr.length - i - 1; j++) {\r\n\t\t\t// colors it up to active\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[j + 1].style.backgroundColor = colors.cyan;\r\n\t\t\t\tsound_test(tone,track,arr[i],arr[j],arr.length,audio,speed);\r\n\t\t\t}, count++ * speed);\r\n\t\t\tif (arr[j] > arr[j + 1]) {\r\n\t\t\t\t// swap the heights\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tarrayBars[j].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t\t\tarrayBars[j + 1].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t\t\tlet temp = arrayBars[j].style.height;\r\n\t\t\t\t\tarrayBars[j].style.height = arrayBars[j + 1].style.height;\r\n\t\t\t\t\tarrayBars[j + 1].style.height = temp;\r\n\t\t\t\t}, count++ * speed);\r\n\r\n\t\t\t\tcount += 1;\r\n\t\t\t\tswapped = true;\r\n\r\n\t\t\t\tlet temp = arr[j];\r\n\t\t\t\tarr[j] = arr[j + 1];\r\n\t\t\t\tarr[j + 1] = temp;\r\n\t\t\t}\r\n\t\t\t// color back to normal\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = colors.primaryColor;\r\n\t\t\t\tarrayBars[j + 1].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, count++ * speed);\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[arr.length - i - 1].style.backgroundColor =\r\n\t\t\t\tcolors.sortedElementColor;\r\n\t\t\tif (swapped === false) {\r\n\t\t\t\tfor (let x = 0; x < i; x++) {\r\n\t\t\t\t\tarrayBars[x].style.backgroundColor = colors.sortedElementColor;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, count * speed);\r\n\t\tif (swapped === false) break;\r\n\t}\r\n\r\n\treturn { arr, count };\r\n};\r\n","import colors from '../SortingVisualizer/colorCodes';\r\nimport { swap } from './swap';\r\nimport {sound_test, sound_swap} from '../utils/sound';\r\n\r\nexport const insertionSort = (tempArr, speed,tone,track,audio) => {\r\n\tlet count = 0;\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\tconst arr = tempArr.map(item => item.val);\r\n\r\n\tfor (let i = 1; i < arr.length; i++) {\r\n\t\t// color current comparing value\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[i].style.backgroundColor = colors.orange;\r\n\t\t\tarrayBars[i - 1].style.backgroundColor = colors.orange;\r\n\t\t\tsound_test(tone,track,arr[i],arr[j],arr.length,audio,speed);\r\n\t\t}, count++ * speed);\r\n\r\n\t\tlet j = i;\r\n\t\twhile (j > 0 && arr[j] < arr[j - 1]) {\r\n\t\t\tlet k = j; /* to avoid es line error */\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (k !== i)\r\n\t\t\t\t\tarrayBars[k].style.backgroundColor = colors.sortedElementColor;\r\n\t\t\t\tarrayBars[k - 1].style.backgroundColor = colors.sortedElementColor;\r\n\t\t\t\tsound_swap(tone,track,arr[i],arr[j],arr.length,audio,speed);\r\n\r\n\t\t\t\tlet temp = arrayBars[k].style.height;\r\n\t\t\t\tarrayBars[k].style.height = arrayBars[k - 1].style.height;\r\n\t\t\t\tarrayBars[k - 1].style.height = temp;\r\n\t\t\t}, count++ * speed);\r\n\r\n\t\t\tswap(j, j - 1, arr);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (k !== i) arrayBars[k].style.backgroundColor = colors.primaryColor;\r\n\t\t\t\tarrayBars[k - 1].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, count++ * speed);\r\n\t\t\tj--;\r\n\t\t}\r\n\t\t// set the color to normal color\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[i].style.backgroundColor = colors.primaryColor;\r\n\t\t\tarrayBars[i - 1].style.backgroundColor = colors.primaryColor;\r\n\t\t}, count * speed);\r\n\t}\r\n\treturn { arr, count };\r\n};\r\n","import { swap } from './swap';\r\n\r\nexport const selectionSort = (tempArr, speed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\n\tlet count = 0;\r\n\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t// initially minidx is set to i\r\n\t\tlet minIdx = i;\r\n\r\n\t\t// change the color of the minIdx to red to identify\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[minIdx].style.backgroundColor = 'red';\r\n\t\t}, count * speed);\r\n\t\tcount++;\r\n\r\n\t\t// traverse for the next smallest item\r\n\t\tfor (let j = i + 1; j < arr.length; j++) {\r\n\t\t\t// current item color to orange\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = 'orange';\r\n\t\t\t}, (count + 2) * speed);\r\n\r\n\t\t\tlet oldMinIdx;\r\n\t\t\tif (arr[j] < arr[minIdx]) {\r\n\t\t\t\toldMinIdx = minIdx;\r\n\t\t\t\tminIdx = j;\r\n\r\n\t\t\t\t// change the old minIdx to default color\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tarrayBars[oldMinIdx].style.backgroundColor = '#dd85e7';\r\n\t\t\t\t}, (count + 3) * speed);\r\n\t\t\t}\r\n\t\t\t// changing the current item to default color\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = '#dd85e7';\r\n\t\t\t}, (count + 3) * speed);\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\tswap(i, minIdx, arr);\r\n\r\n\t\t// swap the heights and color the sorted item green\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet temp = arrayBars[i].style.height;\r\n\t\t\tarrayBars[i].style.height = arrayBars[minIdx].style.height;\r\n\t\t\tarrayBars[minIdx].style.height = temp;\r\n\t\t\tarrayBars[i].style.backgroundColor = 'green';\r\n\t\t}, (count + 3) * speed);\r\n\t\tcount++;\r\n\t}\r\n\treturn { arr, count };\r\n};\r\n","import React from 'react';\r\nimport Visualizer from './SortingVisualizer/Visualizer';\r\nimport { Grommet } from 'grommet';\r\nimport './App.css';\r\nimport { grommet } from 'grommet/themes';\r\n\r\nconst theme = {\r\n\tglobal: {\r\n\t  font: {\r\n\t\tfamily: 'Roboto',\r\n\t\tsize: '18px',\r\n\t\theight: '20px',\r\n\t  },\r\n\t},\r\n  };\r\nfunction App() {\r\n\treturn (\r\n\t\t<Grommet full theme={grommet} >\r\n\t\t\t<Visualizer />\r\n\t\t</Grommet>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}