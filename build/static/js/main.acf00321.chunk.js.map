{"version":3,"sources":["SortingVisualizer/colorCodes.js","Icons/GithubIcon.js","algorithms/mergesort.js","algorithms/swap.js","utils/sound.js","algorithms/quicksort.js","algorithms/heapsort.js","SortingVisualizer/Visualizer.js","algorithms/bubblesort.js","algorithms/insertion.js","algorithms/selectionsort.js","App.js","index.js"],"names":["colors","primaryColor","afterSortingColor","pivotActiveColor","sortedElementColor","cyan","orange","GithubIcon","count","mergesort","arr","low","high","animationSpeed","aux","push","mid","Math","floor","right","left","k","arrayBars","document","getElementsByClassName","li","ri","counter","barIdx","i","setTimeout","style","backgroundColor","height","length","swap","j","temp","quicksortHelper","speed","pivot","partition","pivotElement","tempI","setColor","color","swapHeights","heapify","n","largest","leftChild","rightChild","sort","algoOption","Visualizer","useState","mainArray","setMainArray","arrayLength","setArrayLength","setAnimationSpeed","algo","setAlgo","able","setAble","options","setOptions","queue","then","performance","now","audio","AudioContext","master","createGain","gain","setValueAtTime","currentTime","connect","destination","track","tone","createOscillator","type","frequency","value","start","useEffect","populateArray","items","pointerEvents","disabled","Array","Worker","window","requestAnimationFrame","tick","elements","getElementsByTagName","delay","Number","translate","transition","transform","classList","remove","event","shift","element1","data","element2","value1","dataset","value2","offsetLeft","add","linearRampToValueAtTime","cancelScheduledValues","size","innerHTML","tempArr","tmp","parseInt","a","b","random","item","idx","val","colorEveryElement","sortedArray","bubbleSortAnimate","console","log","map","sorted","test","bubbleSort","mergeSort","mergeSortAnimation","insertionSortAnimate","sound_test","sound_swap","insertionSort","selectionSortAnimate","minIdx","oldMinIdx","selectionSort","quicksortAnimate","quicksort","heapsortAnimate","heapsort","Box","fill","className","direction","border","Grid","rows","columns","gap","areas","width","align","Text","Select","placeholder","onChange","option","onClose","onSearch","text","escapedText","replace","exp","RegExp","filter","o","pad","FormField","label","TextInput","target","Button","primary","icon","CirclePlay","onClick","startSorting","Refresh","RangeInput","min","max","step","gridArea","display","key","App","Grommet","full","theme","grommet","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.acf00321.chunk.js","sourcesContent":["const colors = {\r\n\tprimaryColor: '#00b0ff',\r\n\tafterSortingColor: '#00587a',\r\n\tpivotActiveColor: '#ff2400',\r\n\tsortedElementColor: '#4cbb17',\r\n\tcyan: '#40E0D0',\r\n\torange: '#FFA500',\r\n};\r\n\r\nexport default colors;\r\n","import React from 'react';\r\nimport '../SortingVisualizer/SortingVisualizer.css';\r\nfunction GithubIcon({ className }) {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tonClick={() => {\r\n\t\t\t\tconsole.log('heloo');\r\n\t\t\t\twindow\r\n\t\t\t\t\t.open(\r\n\t\t\t\t\t\t'https://github.com/ashirbad29/Sorting-Algorithm-Visualizer',\r\n\t\t\t\t\t\t'_blank'\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.focus();\r\n\t\t\t}}\r\n\t\t\tclassName={className}\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: '#00303f',\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t}}\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\twidth='40'\r\n\t\t\theight='40'\r\n\t\t\tviewBox='0 0 24 24'\r\n\t\t>\r\n\t\t\t<path d='M10.9 2.1c-4.6.5-8.3 4.2-8.8 8.7-.5 4.7 2.2 8.9 6.3 10.5.3.1.6-.1.6-.5v-1.6s-.4.1-.9.1c-1.4 0-2-1.2-2.1-1.9-.1-.4-.3-.7-.6-1-.3-.1-.4-.1-.4-.2 0-.2.3-.2.4-.2.6 0 1.1.7 1.3 1 .5.8 1.1 1 1.4 1 .4 0 .7-.1.9-.2.1-.7.4-1.4 1-1.8-2.3-.5-4-1.8-4-4 0-1.1.5-2.2 1.2-3-.1-.2-.2-.7-.2-1.4 0-.4 0-1 .3-1.6 0 0 1.4 0 2.8 1.3.5-.2 1.2-.3 1.9-.3s1.4.1 2 .3C15.3 6 16.8 6 16.8 6c.2.6.2 1.2.2 1.6 0 .8-.1 1.2-.2 1.4.7.8 1.2 1.8 1.2 3 0 2.2-1.7 3.5-4 4 .6.5 1 1.4 1 2.3v2.6c0 .3.3.6.7.5 3.7-1.5 6.3-5.1 6.3-9.3 0-6-5.1-10.7-11.1-10z'></path>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default GithubIcon;\r\n","import colors from '../SortingVisualizer/colorCodes';\r\n\r\nlet count = 0;\r\n\r\nexport const mergeSortAnimation = (tempArr, animationSpeed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tcount = 0;\r\n\tconst sortedArray = mergesort(arr, 0, arr.length - 1, animationSpeed);\r\n\treturn { sortedArray, count };\r\n};\r\n\r\nconst mergesort = (arr, low, high, animationSpeed) => {\r\n\tif (low > high) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tif (low === high) {\r\n\t\tlet aux = [];\r\n\t\taux.push(arr[low]);\r\n\t\treturn aux;\r\n\t}\r\n\r\n\tlet mid = Math.floor((high + low) / 2);\r\n\r\n\t// recursively divide the array until its sorted\r\n\t// in the end it will only have a single item and sorted :)\r\n\r\n\tconst right = mergesort(arr, low, mid, animationSpeed);\r\n\tconst left = mergesort(arr, mid + 1, high, animationSpeed);\r\n\r\n\tconst aux = [];\r\n\tlet k = low;\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\n\tlet li = 0,\r\n\t\tri = 0; // for left and right array respectively\r\n\twhile (li < left.length && ri < right.length) {\r\n\t\tlet counter = count;\r\n\t\tlet barIdx = k;\r\n\r\n\t\tif (left[li] < right[ri]) {\r\n\t\t\taux.push(left[li]);\r\n\t\t\tlet i = li;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${left[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tli++;\r\n\t\t} else {\r\n\t\t\taux.push(right[ri]);\r\n\t\t\tlet i = ri;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${right[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tri++;\r\n\t\t}\r\n\t\tk++;\r\n\t\tcount++;\r\n\t}\r\n\r\n\t// left exhausted\r\n\tif (li === left.length) {\r\n\t\twhile (ri < right.length) {\r\n\t\t\taux.push(right[ri]);\r\n\t\t\tlet barIdx = k;\r\n\t\t\tlet i = ri;\r\n\t\t\tlet counter = count;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${right[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tri++;\r\n\t\t\tcount++;\r\n\t\t\tk++;\r\n\t\t}\r\n\t} else if (ri === right.length) {\r\n\t\twhile (li < left.length) {\r\n\t\t\taux.push(left[li]);\r\n\t\t\tlet barIdx = k;\r\n\t\t\tlet i = li;\r\n\t\t\tlet counter = count;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${left[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tli++;\r\n\t\t\tk++;\r\n\t\t\tcount++;\r\n\t\t}\r\n\t}\r\n\treturn aux;\r\n};\r\n","export function swap(i, j, arr = []) {\r\n\tlet temp = arr[i];\r\n\tarr[i] = arr[j];\r\n\tarr[j] = temp;\r\n}\r\n","\r\nexport const sound_test = (tone, track,value1,value2,size,audio,delay) => {\r\n\tvar factor = ((value1 / size) + (value2 / size) / 2);\r\n    var frequency = 2000 + (factor * 2000);\r\n\r\n    tone.frequency.linearRampToValueAtTime(frequency, audio.currentTime);\r\n\r\n    track.gain.cancelScheduledValues(audio.currentTime);\r\n    track.gain.linearRampToValueAtTime(0.75, audio.currentTime);\r\n    track.gain.linearRampToValueAtTime(0, audio.currentTime + delay/1000);\r\n};\r\n\r\n\r\nexport const sound_swap = (tone, track,value1,value2,size,audio,delay) => {\r\n    var factor = ((value1 / size) + (value2 / size) / 2);\r\n    var frequency = 2000 - (factor * 2000);\r\n\r\n    tone.frequency.linearRampToValueAtTime(frequency, audio.currentTime);\r\n\r\n    track.gain.cancelScheduledValues(audio.currentTime);\r\n    track.gain.linearRampToValueAtTime(1, audio.currentTime);\r\n    track.gain.linearRampToValueAtTime(0, audio.currentTime + delay/1000);\r\n};\r\n","import colors from '../SortingVisualizer/colorCodes';\r\nimport { swap } from './swap';\r\n\r\nconst arrayBars = document.getElementsByClassName('arrayBar');\r\nlet count = 0;\r\n\r\nexport const quicksort = (tempArr, animationSpeed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tcount = 0;\r\n\tlet low = 0;\r\n\tlet high = arr.length - 1;\r\n\r\n\t// main quicksort function\r\n\tquicksortHelper(arr, low, high, animationSpeed);\r\n\tcount += 2;\r\n\treturn { arr, count };\r\n};\r\n\r\nconst quicksortHelper = (arr, low, high, speed) => {\r\n\tif (low > high) return;\r\n\r\n\tlet pivot = partition(arr, low, high, speed);\r\n\r\n\t// Colors the element which is in its correct place\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[pivot].style.backgroundColor = colors.sortedElementColor;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tquicksortHelper(arr, low, pivot - 1, speed);\r\n\tquicksortHelper(arr, pivot + 1, high, speed);\r\n};\r\n\r\nconst partition = (arr, low, high, speed) => {\r\n\tlet pivotElement = arr[high];\r\n\r\n\t// Colors the current pivot index\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[high].style.backgroundColor = colors.pivotActiveColor;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tlet i = low;\r\n\tfor (let j = low; j < high; j++) {\r\n\t\t// animate the curr traversing element\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[j].style.backgroundColor = colors.cyan;\r\n\t\t}, count * speed);\r\n\t\tcount += 2;\r\n\r\n\t\t// color primary to the curr traversing element\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[j].style.backgroundColor = colors.primaryColor;\r\n\t\t}, count * speed);\r\n\t\tcount++;\r\n\r\n\t\tif (pivotElement > arr[j]) {\r\n\t\t\tlet tempI = i;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[tempI].style.backgroundColor = colors.orange;\r\n\r\n\t\t\t\tlet temp = arrayBars[tempI].style.height;\r\n\t\t\t\tarrayBars[tempI].style.height = arrayBars[j].style.height;\r\n\t\t\t\tarrayBars[j].style.height = temp;\r\n\t\t\t}, count * speed);\r\n\t\t\tcount++;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[tempI].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (count + 1) * speed);\r\n\t\t\tcount++;\r\n\r\n\t\t\tswap(i, j, arr);\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\t// resets the color of pivot element to primary\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[high].style.backgroundColor = colors.primaryColor;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tsetTimeout(() => {\r\n\t\tlet temp = arrayBars[i].style.height;\r\n\t\tarrayBars[i].style.height = arrayBars[high].style.height;\r\n\t\tarrayBars[high].style.height = temp;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tswap(i, high, arr);\r\n\treturn i;\r\n};\r\n","import { swap } from './swap';\r\nimport colors from '../SortingVisualizer/colorCodes';\r\n\r\nlet count = 0;\r\n\r\nconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\nexport const heapsort = (tempArr, speed) => {\r\n\tcount = 0;\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tsort(arr, arr.length, speed);\r\n\treturn { arr, count };\r\n};\r\n\r\nconst setColor = (speed, color, i, j) => {\r\n\tif (i) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[i].style.backgroundColor = color;\r\n\t\t}, count * speed);\r\n\t}\r\n\r\n\tif (j) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[j].style.backgroundColor = color;\r\n\t\t}, count * speed);\r\n\t}\r\n\tcount++;\r\n};\r\nconst swapHeights = (speed, color, i, j) => {\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[i].style.backgroundColor = color;\r\n\t\tarrayBars[j].style.backgroundColor = color;\r\n\r\n\t\tlet temp = arrayBars[i].style.height;\r\n\t\tarrayBars[i].style.height = arrayBars[j].style.height;\r\n\t\tarrayBars[j].style.height = temp;\r\n\t}, count * speed);\r\n\r\n\tcount++;\r\n};\r\n// heapify\r\nconst heapify = (arr, i, n, speed) => {\r\n\tlet largest = i;\r\n\tlet leftChild = i * 2 + 1;\r\n\tlet rightChild = i * 2 + 2;\r\n\r\n\tif (leftChild < n && arr[leftChild] > arr[largest]) largest = leftChild;\r\n\r\n\tif (rightChild < n && arr[rightChild] > arr[largest]) largest = rightChild;\r\n\r\n\tif (largest !== i) {\r\n\t\tswap(i, largest, arr);\r\n\r\n\t\t// color\r\n\t\tswapHeights(speed, colors.pivotActiveColor, i, largest);\r\n\t\tsetColor(speed, colors.primaryColor, i, largest);\r\n\t\theapify(arr, largest, n, speed);\r\n\t}\r\n};\r\n\r\n// sort\r\nconst sort = (arr, n, speed) => {\r\n\t// arrange the array\r\n\tfor (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\r\n\t\theapify(arr, i, n, speed);\r\n\t}\r\n\r\n\tcount += 3;\r\n\t// one by one extract the element from heap\r\n\t// and put them at back\r\n\tfor (let i = n - 1; i >= 0; i--) {\r\n\t\tswap(i, 0, arr);\r\n\t\tswapHeights(speed, colors.orange, i, 0);\r\n\t\tcount += 2;\r\n\r\n\t\tsetColor(speed, colors.sortedElementColor, i);\r\n\t\theapify(arr, 0, i, speed);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport colors from './colorCodes';\r\nimport GithubIcon from '../Icons/GithubIcon';\r\nimport { mergeSortAnimation } from '../algorithms/mergesort';\r\nimport { insertionSort } from '../algorithms/insertion';\r\nimport { selectionSort } from '../algorithms/selectionsort';\r\nimport { bubbleSort } from '../algorithms/bubblesort';\r\nimport { quicksort } from '../algorithms/quicksort';\r\nimport { heapsort } from '../algorithms/heapsort';\r\n// stylesheet\r\nimport './SortingVisualizer.css';\r\nimport { RangeInput, Box, Button, Grid, Text, Select, FormField, TextInput } from 'grommet';\r\nimport { Refresh, CirclePlay } from 'grommet-icons';\r\n// Random Number Genrator\r\nconst generateRandomNumber = (i, j) => {\r\n\treturn Math.floor(i + Math.random() * (j - i));\r\n};\r\nconst algoOption = [\"bubble sort\", \"merge sort\", \"insertion sort\", \"selection sort\", \"quick sort\", \"heap sort\"];\r\n\r\nconst Visualizer = () => {\r\n\t// state of the array\r\n\tconst [mainArray, setMainArray] = useState([]);\r\n\tconst [arrayLength, setArrayLength] = useState(20);\r\n\tconst [animationSpeed, setAnimationSpeed] = useState(10);\r\n\tconst [algo, setAlgo] = useState('mergesort');\r\n\tconst [able, setAble] = useState(true);\r\n\tconst [options, setOptions] = useState(algoOption);\r\n\tvar queue = null;\r\n\tvar worker = null;\r\n\tvar then = performance.now();\r\n\r\n\tconst audio = new AudioContext();\r\n\tvar master = audio.createGain();\r\n\tmaster.gain.setValueAtTime(0.20, audio.currentTime);\r\n\tmaster.connect(audio.destination);\r\n\tvar track = audio.createGain();\r\n\ttrack.gain.setValueAtTime(0, audio.currentTime);\r\n\ttrack.connect(master);\r\n\r\n\tvar tone = audio.createOscillator();\r\n\r\n\ttone.type = 'sine';\r\n\ttone.frequency.value = 440;\r\n\ttone.connect(track);\r\n\ttone.start();\r\n\r\n\t//Render the Array Before DOM loades\r\n\tuseEffect(() => {\r\n\t\tif (able) populateArray(arrayLength);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [arrayLength, algo]);\r\n\r\n\t// ABLE / DISABLE BUTTONS ETC.\r\n\tuseEffect(() => {\r\n\t\tconst items = document.getElementsByClassName('able');\r\n\r\n\t\tif (!able) {\r\n\t\t\tfor (let i = 0; i < items.length; i++) {\r\n\t\t\t\titems[i].style.pointerEvents = 'none';\r\n\t\t\t\titems[i].disabled = true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < items.length; i++) {\r\n\t\t\t\titems[i].style.pointerEvents = 'auto';\r\n\t\t\t\titems[i].disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}, [able]);\r\n\r\n\tuseEffect(() => {\r\n\t\tqueue = new Array();\r\n\t\tworker = new Worker('../utils/worker.js');\r\n\t\twindow.requestAnimationFrame(function tick(now) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\t\t\tvar container = document.getElementsByClassName('#visualization');\r\n\t\t\tvar elements = document.getElementsByTagName('span');\r\n\r\n\t\t\tvar delay = Number(document.getElementsByClassName('#delay').value);\r\n\r\n\t\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\t\tif (elements[i].style.translate != '0px') {\r\n\t\t\t\t\telements[i].style.transition = 'all ' + (delay / 1000) + 's';\r\n\t\t\t\t\telements[i].style.transform = 'translate(0px)';\r\n\t\t\t\t\t//elements[i].style.translate = '0px';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (now - then > delay) {\r\n\t\t\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\t\t\telements[i].classList.remove('test');\r\n\t\t\t\t\telements[i].classList.remove('swap');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar event = (queue || []).shift();\r\n\t\t\t\tif (event) {\r\n\t\t\t\t\tvar element1 = elements[event.data[1]];\r\n\t\t\t\t\tvar element2 = elements[event.data[2]];\r\n\r\n\t\t\t\t\tvar value1 = Number(element1.dataset.value);\r\n\t\t\t\t\tvar value2 = Number(element2.dataset.value);\r\n\r\n\t\t\t\t\tvar distance = Math.floor(element1.offsetLeft - element2.offsetLeft);\r\n\r\n\t\t\t\t\tif (event.data[0] == 'test') {\r\n\t\t\t\t\t\telement1.classList.add('test');\r\n\t\t\t\t\t\telement2.classList.add('test');\r\n\r\n\t\t\t\t\t\tvar factor = ((value1 / elements.length) + (value2 / elements.length) / 2);\r\n\t\t\t\t\t\tvar frequency = 440 + (factor * 440);\r\n\r\n\t\t\t\t\t\ttone.frequency.linearRampToValueAtTime(frequency, audio.currentTime);\r\n\r\n\t\t\t\t\t\ttrack.gain.cancelScheduledValues(audio.currentTime);\r\n\t\t\t\t\t\ttrack.gain.linearRampToValueAtTime(0.75, audio.currentTime);\r\n\t\t\t\t\t\ttrack.gain.linearRampToValueAtTime(0, audio.currentTime + delay);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (event.data[0] == 'swap') {\r\n\t\t\t\t\t\tvar factor = ((value1 / elements.length) + (value2 / elements.length) / 2);\r\n\t\t\t\t\t\tvar frequency = 440 - (factor * 440);\r\n\r\n\t\t\t\t\t\ttone.frequency.linearRampToValueAtTime(frequency, audio.currentTime);\r\n\r\n\t\t\t\t\t\ttrack.gain.cancelScheduledValues(audio.currentTime);\r\n\t\t\t\t\t\ttrack.gain.linearRampToValueAtTime(1, audio.currentTime);\r\n\t\t\t\t\t\ttrack.gain.linearRampToValueAtTime(0, audio.currentTime + delay);\r\n\r\n\t\t\t\t\t\t// swap 2 elements\r\n\t\t\t\t\t\tarrayBars[event.data[1]].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t\t\t\tarrayBars[event.data[2]].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t\t\t\tlet temp = arrayBars[event.data[1]].style.height;\r\n\t\t\t\t\t\tarrayBars[event.data[1]].style.height = arrayBars[event.data[2]].style.height;\r\n\t\t\t\t\t\tarrayBars[event.data[2]].style.height = temp;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttrack.gain.cancelScheduledValues(0);\r\n\t\t\t\t\ttrack.gain.linearRampToValueAtTime(0, audio.currentTime);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthen = now;\r\n\t\t\t}\r\n\t\t\twindow.requestAnimationFrame(tick);\r\n\r\n\t\t})\r\n\t});\r\n\r\n\tconst populateArray = size => {\r\n\t\tvar myDiv = document.getElementsByClassName(\"visualizeContainer\");\r\n    \tmyDiv.innerHTML = \"\";//remove all child elements inside of myDiv\r\n\t\tconst tempArr = [];\r\n\t\tvar tmp = [];\r\n\t\tsize=parseInt(size)\r\n\t\tfor (let i = 1; i < (size + 1); i++) {\r\n\t\t\ttmp.push(i);\r\n\t\t}\r\n\t\ttmp.sort(function (a, b) {\r\n\t\t\treturn Math.random() > 0.5 ? -1 : 1;\r\n\t\t});\r\n \t\tfor (let i = 0; i < tmp.length; i++) {\r\n\t\t\tconst item = {\r\n\t\t\t\tidx: i,\r\n\t\t\t\tval: tmp[i],\r\n\t\t\t};\r\n\t\t\ttempArr.push(item);\r\n\t\t\tif (document.getElementsByClassName('arrayBar')[i] != null) {\r\n\t\t\t\tdocument.getElementsByClassName('arrayBar')[i].style.backgroundColor =\r\n\t\t\t\t\tcolors.primaryColor;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (able) setMainArray(tempArr);\r\n\t};\r\n\r\n\t// colors every elements afte sorting\r\n\tconst colorEveryElement = (arr, counter) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst sortedArray = [];\r\n\t\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\t\tdocument.getElementsByClassName('arrayBar')[i].style.backgroundColor =\r\n\t\t\t\t\tcolors.afterSortingColor;\r\n\r\n\t\t\t\tsortedArray.push({\r\n\t\t\t\t\tidx: i,\r\n\t\t\t\t\tval: arr[i],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tsetMainArray(sortedArray);\r\n\t\t\tsetAble(true);\r\n\t\t}, counter * animationSpeed);\r\n\t};\r\n\r\n\t// BUBBLE SORT\r\n\tconst bubbleSortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconsole.log(mainArray);\r\n\t\tconst { arr, count } = bubbleSort(mainArray, animationSpeed, tone, track, audio);\r\n\t\tcolorEveryElement(arr, count + 1);\r\n\t};\r\n\r\n\t// MERGE SORT\r\n\tconst mergeSort = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { sortedArray, count } = mergeSortAnimation(\r\n\t\t\tmainArray,\r\n\t\t\tanimationSpeed\r\n\t\t);\r\n\t\tcolorEveryElement(sortedArray, count + 5);\r\n\t};\r\n\r\n\t// INSERTION SORT\r\n\tconst insertionSortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { arr, count } = insertionSort(mainArray, animationSpeed, tone, track, audio);\r\n\t\tcolorEveryElement(arr, count + 1);\r\n\t};\r\n\r\n\t// SELECTION SORT\r\n\tconst selectionSortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { arr, count } = selectionSort(mainArray, animationSpeed);\r\n\t\tcolorEveryElement(arr, count + 2);\r\n\t};\r\n\r\n\t//QUICK SORT\r\n\tconst quicksortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { arr, count } = quicksort(mainArray, animationSpeed);\r\n\t\tcolorEveryElement(arr, count + 1);\r\n\t};\r\n\r\n\t// HEAP SORT\r\n\tconst heapsortAnimate = () => {\r\n\t\tsetAble(false);\r\n\t\tconst { arr, count } = heapsort(mainArray, animationSpeed);\r\n\t\tcolorEveryElement(arr, count + 1);\r\n\t};\r\n\tconst startSorting = algo => {\r\n\t\tswitch (algo) {\r\n\t\t\tcase 'bubble sort':\r\n\t\t\t\tbubbleSortAnimate();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'merge sort':\r\n\t\t\t\tmergeSort();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'selection sort':\r\n\t\t\t\tselectionSortAnimate();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'insertion sort':\r\n\t\t\t\tinsertionSortAnimate();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quick sort':\r\n\t\t\t\tquicksortAnimate();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'heap sort':\r\n\t\t\t\theapsortAnimate();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tmergeSort();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tfill=\"vertical\"\r\n\t\t\tclassName=\"myContainer\"\r\n\t\t\tdirection=\"row\"\r\n\t\t\tborder={{ color: '#00b0ff', size: 'large' }}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\tclassName=\"myContainer\"\r\n\t\t\t\trows={['flex']}\r\n\t\t\t\tcolumns={['1/4', '3/4']}\r\n\t\t\t\tgap=\"small\"\r\n\t\t\t\tareas={[\r\n\t\t\t\t\t['sidebar', 'main'],\r\n\t\t\t\t]}\r\n\t\t\t\tstyle={{width:\"100%\"}}\r\n\t\t\t>\r\n\t\t\t\t<Box direction=\"column\" align=\"center\" gap=\"medium\" fill=\"vertical\">\r\n\t\t\t\t\t<Box align=\"center\">\r\n\t\t\t\t\t\t<Text>Sorting Algorithm</Text>\r\n\t\t\t\t\t\t<Text>Visualizer</Text>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box >\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\tplaceholder=\"Select Sorting Algorithm\"\r\n\t\t\t\t\t\t\tvalue={algo}\r\n\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\tonChange={({ option }) => setAlgo(option)}\r\n\t\t\t\t\t\t\tonClose={() => setOptions(algoOption)}\r\n\t\t\t\t\t\t\tonSearch={text => {\r\n\t\t\t\t\t\t\t\t// The line below escapes regular expression special characters:\r\n\t\t\t\t\t\t\t\t// [ \\ ^ $ . | ? * + ( )\r\n\t\t\t\t\t\t\t\tconst escapedText = text.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n\r\n\t\t\t\t\t\t\t\t// Create the regular expression with modified value which\r\n\t\t\t\t\t\t\t\t// handles escaping special characters. Without escaping special\r\n\t\t\t\t\t\t\t\t// characters, errors will appear in the console\r\n\t\t\t\t\t\t\t\tconst exp = new RegExp(escapedText, 'i');\r\n\t\t\t\t\t\t\t\tsetOptions(algoOption.filter(o => exp.test(o)));\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* <Select\r\n\t\t\t\t\t\toptions={algoList}\r\n\t\t\t\t\t\tvalue={algo}\r\n\t\t\t\t\t\tonChange={({ option }) => setAlgo(option)}\r\n\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box pad=\"medium\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<FormField label={<Text size='medium' color='black'> Number of elements</Text>} style={{color: \"#1976D2\"}}>\r\n\t\t\t\t\t\t\t<TextInput placeholder=\"default is 10\" onChange={event => {setArrayLength(event.target.value)}} />\r\n\t\t\t\t\t\t</FormField>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"light-2\"\r\n\t\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\t\ticon={<CirclePlay />}\r\n\t\t\t\t\t\t\tlabel=\"Play\"\r\n\t\t\t\t\t\t\tonClick={() => startSorting(algo)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"light-2\"\r\n\t\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\t\ticon={<Refresh />}\r\n\t\t\t\t\t\t\tlabel=\"Reset\"\r\n\t\t\t\t\t\t\tonClick={() => { }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text size=\"small\">Speed: {`${animationSpeed}`}</Text>\r\n\t\t\t\t\t\t<RangeInput\r\n\t\t\t\t\t\t\tmin={16}\r\n\t\t\t\t\t\t\tmax={36}\r\n\t\t\t\t\t\t\tstep={2}\r\n\t\t\t\t\t\t\tvalue={animationSpeed}\r\n\t\t\t\t\t\t\tonChange={event => setAnimationSpeed(parseInt(event.target.value, 10))}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box gridArea=\"main\" fill=\"vertical\" style={{ width: '100%', height: '100%',display:'flex' }}>\r\n\t\t\t\t\t<div className='visualizeContainer'>\r\n\t\t\t\t\t\t{mainArray.map(item => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName='arrayBar'\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: `${item.val*100/mainArray.length}%`,\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: colors.primaryColor,\r\n\t\t\t\t\t\t\t\t\t\twidth: `${100/mainArray.length}%`,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tkey={item.idx}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{arrayLength < 29 && able && <span>{item.val}</span>}\r\n\t\t\t\t\t\t\t\t\t{/* { able && <span>{item.val}</span>} */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\r\n\t\t// <div className='container'>\r\n\t\t// <div className='visualizeContainer'>\r\n\t\t// \t{mainArray.map(item => {\r\n\t\t// \t\treturn (\r\n\t\t// \t\t\t<div\r\n\t\t// \t\t\t\tclassName='arrayBar'\r\n\t\t// \t\t\t\tstyle={{\r\n\t\t// \t\t\t\t\theight: `${item.val}px`,\r\n\t\t// \t\t\t\t\tbackgroundColor: colors.primaryColor,\r\n\t\t// \t\t\t\t}}\r\n\t\t// \t\t\t\tkey={item.idx}\r\n\t\t// \t\t\t>\r\n\t\t// \t\t\t\t{arrayLength < 29 && able && <span>{item.val}</span>}\r\n\t\t// \t\t\t</div>\r\n\t\t// \t\t);\r\n\t\t// \t})}\r\n\t\t// </div>\r\n\t\t// \t<div className='sidebar'>\r\n\t\t// \t\t<header>\r\n\t\t// \t\t\tSorting Algorithm <br /> Visualizer\r\n\t\t// \t\t</header>\r\n\t\t// \t\t<div className='select-box able'>\r\n\t\t// \t\t\t<label htmlFor='algo'>select algorithm</label>\r\n\t\t// \t\t\t<select\r\n\t\t// \t\t\t\tname='algo'\r\n\t\t// \t\t\t\tid='select'\r\n\t\t// \t\t\t\tvalue={algo}\r\n\t\t// \t\t\t\tonChange={e => setAlgo(e.target.value)}\r\n\t\t// \t\t\t>\r\n\t\t// \t\t\t\t<option value='bubblesort'>bubble sort</option>\r\n\t\t// \t\t\t\t<option value='mergesort'>merge sort</option>\r\n\t\t// \t\t\t\t<option value='insertionsort'>insertion sort</option>\r\n\t\t// \t\t\t\t<option value='selectionsort'>selection sort</option>\r\n\t\t// \t\t\t\t<option value='quicksort'>quick sort</option>\r\n\t\t// \t\t\t\t<option value='heapsort'>heap sort</option>\r\n\t\t// \t\t\t</select>\r\n\t\t// \t\t</div>\r\n\t\t// \t\t<button className='button able' onClick={() => startSorting(algo)}>\r\n\t\t// \t\t\tSort\r\n\t\t// \t\t</button>\r\n\r\n\t\t// \t\t<button\r\n\t\t// \t\t\tonClick={() => populateArray(arrayLength)}\r\n\t\t// \t\t\tclassName='new-arr-btn button able'\r\n\t\t// \t\t>\r\n\t\t// \t\t\tReset\r\n\t\t// \t\t</button>\r\n\r\n\t\t// \t\t<div className='slider-container'>\r\n\t\t// \t\t\t<label>Length of Array</label>\r\n\t\t// \t\t\t<input\r\n\t\t// \t\t\t\tclassName='input-range able'\r\n\t\t// \t\t\t\ttype='range'\r\n\t\t// \t\t\t\tvalue={arrayLength}\r\n\t\t// \t\t\t\tonChange={e => setArrayLength(e.target.value)}\r\n\t\t// \t\t\t\tmin='7'\r\n\t\t// \t\t\t\tmax='150'\r\n\t\t// \t\t\t/>\r\n\t\t// \t\t</div>\r\n\t\t// \t\t<div className='slider-container'>\r\n\t\t// \t\t\t<label>Speed</label>\r\n\t\t// \t\t\t<input\r\n\t\t// \t\t\t\tclassName='input-range able'\r\n\t\t// \t\t\t\ttype='range'\r\n\t\t// \t\t\t\tvalue={500 - animationSpeed}\r\n\t\t// \t\t\t\tonChange={e => setAnimationSpeed(500 - e.target.value)}\r\n\t\t// \t\t\t\tmin='350'\r\n\t\t// \t\t\t\tmax='499'\r\n\t\t// \t\t\t/>\r\n\t\t// \t\t</div>\r\n\r\n\t\t// \t\t<GithubIcon className={'github-icon'} />\r\n\t\t// \t</div>\r\n\t\t// </div>\r\n\t);\r\n};\r\n\r\nexport default Visualizer;\r\n","import colors from '../SortingVisualizer/colorCodes';\r\nimport {sound_test, sound_swap} from '../utils/sound';\r\nimport {swap,test} from '../utils/worker'\r\nexport const bubbleSort = (tempArr, speed,tone,track,audio) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tlet count = 0;\r\n\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\tfor (let i = 0; i < arr.length - 1; i++) {\r\n\t\tlet sorted = true;\r\n\t\tfor (let j = 0; j < arr.length - i - 1; j++) {\r\n\t\t\t// colors it up to active\r\n\t\t\t// setTimeout(() => {\r\n\t\t\t// \tarrayBars[j].style.backgroundColor = colors.cyan;\r\n\t\t\t// \tarrayBars[j + 1].style.backgroundColor = colors.cyan;\r\n\t\t\t// \tsound_test(tone,track,arr[i],arr[j],arr.length,audio,speed);\r\n\t\t\t// }, count++ * speed);\r\n\t\t\tif (test(tempArr, j + 1, j) < 0) {\r\n\t\t\t\tsorted = false;\r\n\t\t\t\tswap(tempArr, j, j + 1);\r\n\t\t\t//   }\r\n\t\t\t// if (arr[j] > arr[j + 1]) {\r\n\t\t\t\t// swap the heights\r\n\t\t\t\t// setTimeout(() => {\r\n\t\t\t\t// \tarrayBars[j].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t\t// \tarrayBars[j + 1].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t\t// \tlet temp = arrayBars[j].style.height;\r\n\t\t\t\t// \tarrayBars[j].style.height = arrayBars[j + 1].style.height;\r\n\t\t\t\t// \tarrayBars[j + 1].style.height = temp;\r\n\t\t\t\t// }, count++ * speed);\r\n\r\n\t\t\t\tcount += 1;\r\n\r\n\t\t\t\tlet temp = arr[j];\r\n\t\t\t\tarr[j] = arr[j + 1];\r\n\t\t\t\tarr[j + 1] = temp;\r\n\t\t\t}\r\n\t\t\t// color back to normal\r\n\t\t\t// setTimeout(() => {\r\n\t\t\t// \tarrayBars[j].style.backgroundColor = colors.primaryColor;\r\n\t\t\t// \tarrayBars[j + 1].style.backgroundColor = colors.primaryColor;\r\n\t\t\t// }, count++ * speed);\r\n\t\t}\r\n\t\t// setTimeout(() => {\r\n\t\t// \tarrayBars[arr.length - i - 1].style.backgroundColor =\r\n\t\t// \t\tcolors.sortedElementColor;\r\n\t\t// \tif (swapped === false) {\r\n\t\t// \t\tfor (let x = 0; x < i; x++) {\r\n\t\t// \t\t\tarrayBars[x].style.backgroundColor = colors.sortedElementColor;\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// }, count * speed);\r\n\t\tif(sorted == true){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t}\r\n\tconsole.log(\"end\");\r\n\treturn { arr, count };\r\n};\r\n","import colors from '../SortingVisualizer/colorCodes';\r\nimport { swap } from './swap';\r\nimport {sound_test, sound_swap} from '../utils/sound';\r\n\r\nexport const insertionSort = (tempArr, speed,tone,track,audio) => {\r\n\tlet count = 0;\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\tconst arr = tempArr.map(item => item.val);\r\n\r\n\tfor (let i = 1; i < arr.length; i++) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[i].style.backgroundColor = colors.orange;\r\n\t\t\tarrayBars[i - 1].style.backgroundColor = colors.orange;\r\n\t\t\tsound_test(tone,track,arr[i],arr[j],arr.length,audio,speed);\r\n\t\t}, count++ * speed);\r\n\r\n\t\tlet j = i;\r\n\t\twhile (j > 0 && arr[j] < arr[j - 1]) {\r\n\t\t\tlet k = j; \r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (k !== i)\r\n\t\t\t\t\tarrayBars[k].style.backgroundColor = colors.sortedElementColor;\r\n\t\t\t\tarrayBars[k - 1].style.backgroundColor = colors.sortedElementColor;\r\n\t\t\t\tsound_swap(tone,track,arr[i],arr[j],arr.length,audio,speed);\r\n\r\n\t\t\t\tlet temp = arrayBars[k].style.height;\r\n\t\t\t\tarrayBars[k].style.height = arrayBars[k - 1].style.height;\r\n\t\t\t\tarrayBars[k - 1].style.height = temp;\r\n\t\t\t}, count++ * speed);\r\n\r\n\t\t\tswap(j, j - 1, arr);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (k !== i) arrayBars[k].style.backgroundColor = colors.primaryColor;\r\n\t\t\t\tarrayBars[k - 1].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, count++ * speed);\r\n\t\t\tj--;\r\n\t\t}\r\n\t\t// set the color to normal color\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[i].style.backgroundColor = colors.primaryColor;\r\n\t\t\tarrayBars[i - 1].style.backgroundColor = colors.primaryColor;\r\n\t\t}, count * speed);\r\n\t}\r\n\treturn { arr, count };\r\n};\r\n","import { swap } from './swap';\r\n\r\nexport const selectionSort = (tempArr, speed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\n\tlet count = 0;\r\n\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t// initially minidx is set to i\r\n\t\tlet minIdx = i;\r\n\r\n\t\t// change the color of the minIdx to red to identify\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[minIdx].style.backgroundColor = 'red';\r\n\t\t}, count * speed);\r\n\t\tcount++;\r\n\r\n\t\t// traverse for the next smallest item\r\n\t\tfor (let j = i + 1; j < arr.length; j++) {\r\n\t\t\t// current item color to orange\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = 'orange';\r\n\t\t\t}, (count + 2) * speed);\r\n\r\n\t\t\tlet oldMinIdx;\r\n\t\t\tif (arr[j] < arr[minIdx]) {\r\n\t\t\t\toldMinIdx = minIdx;\r\n\t\t\t\tminIdx = j;\r\n\r\n\t\t\t\t// change the old minIdx to default color\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tarrayBars[oldMinIdx].style.backgroundColor = '#dd85e7';\r\n\t\t\t\t}, (count + 3) * speed);\r\n\t\t\t}\r\n\t\t\t// changing the current item to default color\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = '#dd85e7';\r\n\t\t\t}, (count + 3) * speed);\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\tswap(i, minIdx, arr);\r\n\r\n\t\t// swap the heights and color the sorted item green\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet temp = arrayBars[i].style.height;\r\n\t\t\tarrayBars[i].style.height = arrayBars[minIdx].style.height;\r\n\t\t\tarrayBars[minIdx].style.height = temp;\r\n\t\t\tarrayBars[i].style.backgroundColor = 'green';\r\n\t\t}, (count + 3) * speed);\r\n\t\tcount++;\r\n\t}\r\n\treturn { arr, count };\r\n};\r\n","import React from 'react';\r\nimport Visualizer from './SortingVisualizer/Visualizer';\r\nimport { Grommet } from 'grommet';\r\nimport './App.css';\r\nimport { grommet } from 'grommet/themes';\r\n\r\nconst theme = {\r\n\tglobal: {\r\n\t  font: {\r\n\t\tfamily: 'Roboto',\r\n\t\tsize: '18px',\r\n\t\theight: '20px',\r\n\t  },\r\n\t},\r\n  };\r\nfunction App() {\r\n\treturn (\r\n\t\t<Grommet full theme={grommet} >\r\n\t\t\t<Visualizer />\r\n\t\t</Grommet>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}